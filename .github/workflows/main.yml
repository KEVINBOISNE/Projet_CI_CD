name: Python CI/CD

on:
  push:
    branches:
      - main  # Ce workflow est déclenché à chaque push dans la branche `main`
  pull_request:
    branches:
      - main  # Ce workflow est déclenché pour les pull requests vers la branche `main`

jobs:
  # Job de tests (CI)
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run tests
      run: |
        source venv/bin/activate
        pytest

  # Job de déploiement via Docker (CD)
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ce job s'exécute seulement après que le job de tests ait réussi
    if: github.ref == 'refs/heads/main'  # Ce job ne s'exécute que si on est sur la branche `main`
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Configure Docker Buildx pour créer l'image

      - name: Build Docker image
        run: |
          docker build -t latest .  # Cette commande construit l'image Docker avec le tag "latest"

      - name: Login to Docker Hub (ou registre Docker)
        uses: docker/login-action@v2  # Cette étape est nécessaire pour pousser l'image vers Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Utilise les secrets GitHub pour stocker votre Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utilise les secrets GitHub pour stocker votre Docker Hub password

      - name: Push Docker image to Docker Hub (ou registre Docker)
        run: |
          docker tag my-app:latest myusername/my-app:latest  # Tag l'image avec votre nom d'utilisateur Docker Hub
          docker push myusername/my-app:latest  # Pousse l'image vers Docker Hub
